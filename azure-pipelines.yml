# CapStone-ToDo

trigger:
  branches:
    include:
      - master
      - release-candidate

pool:
  vmImage: 'windows-latest' # Required for FileTransform@2 task

stages:
- stage: 'build_capstone'
  displayName: '1. Build and publish capstone.web.api & capstone.web packages, and create and publish capstone.web.api.db script'

  jobs:
  - job: 'build_capstone_web_api_db'
    displayName: '1.1. Build capstone.web.api.db'
    steps:
    - task: DotNetCoreCLI@2
      displayName: '1.1.1. Setup: Install Entity Framework tool'
      inputs:
        command: 'custom'
        custom: 'tool'
        arguments: 'install --global dotnet-ef'
    - task: DotNetCoreCLI@2
      displayName: '1.1.2. Build: Generate Database Script'
      inputs:
        command: 'custom'
        custom: 'ef'
        arguments: 'migrations script --idempotent --configuration Release --project $(Build.SourcesDirectory)/capstone.web.api --context AppDbContext --startup-project $(Build.SourcesDirectory)/capstone.web.api --output $(Build.ArtifactStagingDirectory)/capstone.web.api.db/capstone.web.api.db.sql'
    - task: PublishPipelineArtifact@1
      displayName: '1.1.3. Publish: Publish Database Script as a Pipeline Artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/capstone.web.api.db/capstone.web.api.db.sql'
        artifact: 'capstone.web.api.db'
        publishLocation: 'pipeline'

  - job: 'build_capstone_web_api'
    displayName: '1.2. Build capstone.web.api'
    steps:
    - task: DotNetCoreCLI@2
      displayName: '1.2.1. Build: Build capstone.web.api using Solution File'
      inputs:
        command: 'build'
        projects: '**/*.sln'
        arguments: '--configuration Release'
        workingDirectory: $(Build.SourcesDirectory)/capstone.web.api
    - task: DotNetCoreCLI@2
      displayName: '1.2.2. Build: Create Archive Package in Staging Directory'
      inputs:
        command: 'publish'
        projects: '**/*.sln'
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/capstone.web.api'
        modifyOutputPath: false
        publishWebProjects: false
        zipAfterPublish: true
    - task: PublishPipelineArtifact@1
      displayName: '1.2.3. Publish: Publish Archive Package as a Pipeline Artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/capstone.web.api'
        artifact: 'capstone.web.api'
        publishLocation: 'pipeline'

  - job: 'build_capstone_web'
    displayName: '1.3. Build capstone.web'
    steps:
    - task: UseNode@1
      displayName: '1.3.1. Setup: Install Node.js'
      inputs:
        version: '20.x'
    - script: npm install --global @angular/cli
      displayName: '1.3.2. Setup: Install Angular'
      workingDirectory: $(Build.SourcesDirectory)/capstone.web
    - script: npm install
      displayName: '1.3.3. Setup: Install Packages'
      workingDirectory: $(Build.SourcesDirectory)/capstone.web
    - script: npm run ng build --configuration=production --optimization=true
      displayName: '1.3.4. Build: Create Production Build'
      workingDirectory: $(Build.SourcesDirectory)/capstone.web
    - task: ArchiveFiles@2
      displayName: '1.3.5. Build: Create Archive Package in Staging Directory'
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/capstone.web/dist/capstone.web'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/capstone.web/capstone.web.zip'
        verbose: true
    - task: PublishPipelineArtifact@1
      displayName: '1.3.6. Publish: Publish Archive Package as a Pipeline Artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/capstone.web'
        artifact: 'capstone.web'
        publishLocation: 'pipeline'

- stage: 'deploy_capstone_test'
  displayName: '2. Deploy to Test Environment'
  dependsOn:
    - build_capstone
  variables:
    - template: var-test.yml

  jobs:
    - deployment: deploy_capstone_web_api_db_test
      displayName: '2.1. Deploy capstone.web.api.db to Test'
      environment: test
      strategy:
        runOnce:
          deploy:
            steps:
            - download: none
            - task: DownloadPipelineArtifact@2
              displayName: '2.1.1. Retrieve: Download capstone.web.api.db Pipeline Artifacts'
              inputs:
                buildType: 'current'
                artifactName: 'capstone.web.api.db'
                targetPath: '$(Pipeline.Workspace)/capstone.web.api.db'
            - task: SqlAzureDacpacDeployment@1
              displayName: '2.1.2. Deploy: Update Database'
              inputs:
                azureSubscription: ${{ variables.scDatabase }}
                AuthenticationType: 'connectionString'
                ConnectionString: '${{ variables.DefaultConnection }}'
                deployType: 'SqlTask'
                SqlFile: '$(Pipeline.Workspace)/capstone.web.api.db/capstone.web.api.db.sql'

    - deployment: deploy_capstone_web_api_test
      displayName: '2.2. Deploy capstone.web.api to Test'
      environment: test
      strategy:
        runOnce:
          deploy:
            steps:
            - download: none
            - task: DownloadPipelineArtifact@2
              displayName: '2.2.1. Retrieve: Download capstone.web.api Pipeline Artifacts'
              inputs:
                buildType: 'current'
                artifactName: 'capstone.web.api'
                targetPath: '$(Pipeline.Workspace)/capstone.web.api'
            - task: FileTransform@2
              displayName: '2.2.2. Replace: Adjust Database Connection String'
              inputs:
                folderPath: '$(Pipeline.Workspace)/capstone.web.api/*.zip'
                jsonTargetFiles: '**/appsettings.json'
            - task: AzureWebApp@1
              displayName: '2.2.3. Deploy: Deploy Azure Web App for Windows'
              inputs:
                azureSubscription: ${{ variables.scWebApps }}
                appType: 'webApp'
                appName: '${{ variables.deployWebApi }}'
                package: '$(Pipeline.Workspace)/capstone.web.api/*.zip'
                deploymentMethod: 'zipDeploy'

    - deployment: deploy_capstone_web_test
      displayName: '2.3. Deploy capstone.web to Test'
      environment: test
      strategy:
        runOnce:
          deploy:
            steps:
            - download: none
            - task: DownloadPipelineArtifact@2
              displayName: '2.3.1. Retrieve: Download capstone.web Pipeline Artifacts'
              inputs:
                buildType: 'current'
                artifactName: 'capstone.web'
                targetPath: '$(Pipeline.Workspace)/capstone.web'
            - task: ExtractFiles@1
              displayName: '2.3.2. Retrieve: Extract Artifacts'
              inputs:
                archiveFilePatterns: '$(Pipeline.Workspace)/capstone.web/*.zip'
                destinationFolder: '$(Pipeline.Workspace)/capstone.web/dist'
            - task: replacetokens@6
              displayName: '2.3.3. Replace: Replace capstone.web.api URL in capstone.web'
              inputs:
                sources: '$(Pipeline.Workspace)/capstone.web/dist/**/main*.js'
                addBOM: true
                encoding: 'auto'
                logLevel: 'info'
                missingVarAction: none
                missingVarLog: warn
                telemetryOptout: false
            - task: ArchiveFiles@2
              displayName: '2.3.4. Replace: Create Updated Archive Package in Pipeline Directory'
              inputs:
                rootFolderOrFile: '$(Pipeline.Workspace)/capstone.web/dist'
                includeRootFolder: false
                archiveType: 'zip'
                archiveFile: '$(Pipeline.Workspace)/capstone.web/capstone.web.updated.zip'
                verbose: true
            - task: AzureWebApp@1
              displayName: '2.3.5. Deploy: Deploy Azure Web App for Linux'
              inputs:
                azureSubscription: ${{ variables.scWebApps }}
                appType: 'webApp'
                appName: '${{ variables.deployWeb }}'
                package: '$(Pipeline.Workspace)/capstone.web/capstone.web.updated.zip' 
                deploymentMethod: 'zipDeploy'

- stage: 'deploy_capstone_live'
  displayName: '3. Deploy to Live Environment'
  dependsOn:
    - build_capstone
    - deploy_capstone_test
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  variables:
    - template: var-live.yml

  jobs:
    - deployment: deploy_capstone_web_api_db_live
      displayName: '3.1. Deploy capstone.web.api.db to Live'
      environment: live
      strategy:
        runOnce:
          deploy:
            steps:
            - download: none
            - task: DownloadPipelineArtifact@2
              displayName: '3.1.1. Retrieve: Download capstone.web.api.db Pipeline Artifacts'
              inputs:
                buildType: 'current'
                artifactName: 'capstone.web.api.db'
                targetPath: '$(Pipeline.Workspace)/capstone.web.api.db'
            - task: SqlAzureDacpacDeployment@1
              displayName: '3.1.2. Deploy: Update Database'
              inputs:
                azureSubscription: ${{ variables.scDatabase }}
                AuthenticationType: 'connectionString'
                ConnectionString: '${{ variables.DefaultConnection }}'
                deployType: 'SqlTask'
                SqlFile: '$(Pipeline.Workspace)/capstone.web.api.db/capstone.web.api.db.sql'

    - deployment: deploy_capstone_web_api_live
      displayName: '3.2. Deploy capstone.web.api to Live'
      environment: live
      strategy:
        runOnce:
          deploy:
            steps:
            - download: none
            - task: DownloadPipelineArtifact@2
              displayName: '3.2.1. Retrieve: Download capstone.web.api Pipeline Artifacts'
              inputs:
                buildType: 'current'
                artifactName: 'capstone.web.api'
                targetPath: '$(Pipeline.Workspace)/capstone.web.api'
            - task: FileTransform@2
              displayName: '3.2.2. Replace: Adjust Database Connection String'
              inputs:
                folderPath: '$(Pipeline.Workspace)/capstone.web.api/*.zip'
                jsonTargetFiles: '**/appsettings.json'
            - task: AzureWebApp@1
              displayName: '3.2.3. Deploy: Deploy Azure Web App for Windows'
              inputs:
                azureSubscription: ${{ variables.scWebApps }}
                appType: 'webApp'
                appName: '${{ variables.deployWebApi }}'
                package: '$(Pipeline.Workspace)/capstone.web.api/*.zip'
                deploymentMethod: 'zipDeploy'

    - deployment: deploy_capstone_web_live
      displayName: '3.3. Deploy capstone.web to Live'
      environment: live
      strategy:
        runOnce:
          deploy:
            steps:
            - download: none
            - task: DownloadPipelineArtifact@2
              displayName: '3.3.1. Retrieve: Download capstone.webPipeline Artifacts'
              inputs:
                buildType: 'current'
                artifactName: 'capstone.web'
                targetPath: '$(Pipeline.Workspace)/capstone.web'
            - task: ExtractFiles@1
              displayName: '3.3.2. Retrieve: Extract Artifacts'
              inputs:
                archiveFilePatterns: '$(Pipeline.Workspace)/capstone.web/*.zip'
                destinationFolder: '$(Pipeline.Workspace)/capstone.web/dist'
            - task: replacetokens@6
              displayName: '3.3.3. Replace: Replace capstone.web.api URL in capstone.web'
              inputs:
                sources: '$(Pipeline.Workspace)/capstone.web/dist/**/main*.js'
                addBOM: true
                encoding: 'auto'
                logLevel: 'info'
                missingVarAction: none
                missingVarLog: warn
                telemetryOptout: false
            - task: ArchiveFiles@2
              displayName: '3.3.4. Replace: Create Updated Archive Package in Pipeline Directory'
              inputs:
                rootFolderOrFile: '$(Pipeline.Workspace)/capstone.web/dist'
                includeRootFolder: false
                archiveType: 'zip'
                archiveFile: '$(Pipeline.Workspace)/capstone.web/capstone.web.updated.zip'
                verbose: true
            - task: AzureWebApp@1
              displayName: '3.3.5. Deploy: Deploy Azure Web App for Linux'
              inputs:
                azureSubscription: ${{ variables.scWebApps }}
                appType: 'webApp'
                appName: '${{ variables.deployWeb }}'
                package: '$(Pipeline.Workspace)/capstone.web/capstone.web.updated.zip' 
                deploymentMethod: 'zipDeploy'
