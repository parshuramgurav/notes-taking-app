// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using capstone.web.api;

#nullable disable

namespace capstone.web.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240727145404_UpdateNoteCategorySchema")]
    partial class UpdateNoteCategorySchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NoteCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool?>("added")
                        .HasColumnType("bit");

                    b.Property<int?>("categoryId")
                        .HasColumnType("int");

                    b.Property<int?>("noteId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("NoteCategories");
                });

            modelBuilder.Entity("capstone.web.api.Entities.Category", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<int?>("Noteid")
                        .HasColumnType("int");

                    b.Property<bool?>("added")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("trashed")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("Noteid");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("capstone.web.api.Entities.Note", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("bgColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bgImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("noteBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("noteTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pinned")
                        .HasColumnType("bit");

                    b.Property<bool>("trashed")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("capstone.web.api.Entities.User", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("capstone.web.api.Entities.Category", b =>
                {
                    b.HasOne("capstone.web.api.Entities.Note", null)
                        .WithMany("labels")
                        .HasForeignKey("Noteid");
                });

            modelBuilder.Entity("capstone.web.api.Entities.Note", b =>
                {
                    b.Navigation("labels");
                });
#pragma warning restore 612, 618
        }
    }
}
